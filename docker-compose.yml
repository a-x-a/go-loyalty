name: gophermart

networks:
  app_net:
    driver: bridge

services:
  # accrual
  accrual_system:
    build:
      dockerfile: Dockerfile.accrual
    container_name: accrual_system
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    ports:
      - 9000:8080
    networks:
      - app_net
    environment:
      # RUN_ADDRESS: ${ACCRUAL_SYSTEM_ADDRESS:?Please configure ACCRUAL_SYSTEM_ADDRESS in the .env file}}
      DATABASE_URI: ${DATABASE_URI:?Please configure DATABASE_URI in the .env file}
      # ACCRUAL_SYSTEM_ADDRESS: ${ACCRUAL_SYSTEM_ADDRESS:?Please configure ACCRUAL_SYSTEM_ADDRESS in the .env file}

  # gophermart
  gophermart_api:
    build:
      dockerfile: Dockerfile.gophermart
    container_name: gophermart_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    ports:
      - 9001:8080
    networks:
      - app_net
    environment:
      # RUN_ADDRESS: ${RUN_ADDRESS:?Please configure RUN_ADDRESS in the .env file}}
      DATABASE_URI: ${DATABASE_URI:?Please configure DATABASE_URI in the .env file}
      ACCRUAL_SYSTEM_ADDRESS: ${ACCRUAL_SYSTEM_ADDRESS:?Please configure ACCRUAL_SYSTEM_ADDRESS in the .env file}

  # database
  db:
    image: postgres:14-alpine
    container_name: db
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--quiet",
          "--dbname",
          "${POSTGRES_DB}",
          "--username",
          "${POSTGRES_USER}",
        ]
      start_period: 10s
      interval: 10s
      timeout: 45s
      retries: 10
    ports:
      - 127.0.0.1:5433:5432
    networks:
      - app_net
    volumes:
      - ./volume/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?Please configure POSTGRES_USER in the .env file}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Please configure POSTGRES_PASSWORD in the .env file}
      POSTGRES_DB: ${POSTGRES_DB:?Please configure POSTGRES_DB in the .env file}
